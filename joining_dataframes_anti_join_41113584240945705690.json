{
   "display_name": "Joining Dataframes - Anti Join",
   "metadata": {
      "tags": [
         "Data Analysis"
      ],
      "description": "Rows that do not match in a INNER Join",
      "display_name": "Joining Dataframes - Anti Join",
      "code": [
         "import pandas as pd",
         "dataframe = pd.DataFrame({'Country': ['Afghanistan', 'Afghanistan', 'Brazil', 'Brazil', 'China', 'China'],",
         "                'Year': [1999, 2000, 1999, 2000, 1999, 2000 ],",
         "                'Cases': [745, 2666, 37737, 80488, 212258, 213766],",
         "                'Population': [19987071, 20595360, 172006362, 174504898, 1272815272, 1280428583]})",
         "",
         "df_capitals = pd.DataFrame(",
         "    {\"Country\" : [\"Afghanistan\", \"Brazil\", \"Spain\"],",
         "     \"Capital\" : [\"Kabul\", \"Brasilia\", \"Madrid\"]},",
         "     columns = [\"Country\", \"Capital\"])",
         "",
         "# Anti Join",
         "display(dataframe",
         "    .merge(df_capitals, on = \"Country\", how = \"left\", indicator = True)",
         "    .query(\"_merge == 'left_only'\")",
         "    .drop(columns = [\"_merge\"])",
         " )",
         "",
         "# User function with pipe()",
         "def anti_join(dataframe, df_left, on_fields):",
         "    return (dataframe",
         "                .merge(df_left, on = on_fields, how = \"left\", indicator = True)",
         "                .query(\"_merge == 'left_only'\")",
         "                .drop(columns = [\"_merge\"])",
         "             )",
         "",
         "dataframe.pipe(anti_join, df_capitals, \"Country\")",
         ""
      ],
      "language": "Python"
   },
   "schema_name": "code-snippet"
}